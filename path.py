import googlemaps 
import json
import csv 
import sys
import copy
from random import randint
from time import sleep

coord = []
index = []
_min = sys.maxint
_shortest_path = []
visited = []

# Rigister with your API key
# gmaps = googlemaps.Client(key='Your API key')

def dfs(distance_matrix, visited, routine, count, remain):
    global _min
    global _shortest_path   
    if remain == 0:
        sum = count + distance_matrix[routine[len(routine)-1]][len(visited)]
        if _min > sum:
            _min = sum
            _shortest_path = copy.deepcopy(routine)
        return  
    global _min_limit
    global _max_limit
    lb = compute_lb(distance_matrix, visited, routine, count)
    if lb > _max_limit or lb < _min_limit:
        return
    for i in range(len(visited)):
        if not visited[i]:
            visited[i] = True
            distance = 0
            if(len(routine) > 0):
                last = routine[len(routine)-1]
                distance = distance_matrix[last][i]
            routine.append(i);
            dfs(distance_matrix, visited, routine, count+distance, remain-1)
            routine.pop()
            visited[i] = False

def compute_lb(distance_matrix, visited, routine, count):
    lb = count * 2
    start = routine[0]
    end = routine[len(routine)-1]
    min_val = sys.maxint
    for i in range(len(visited)):
        if (not visited[i]) and ( min_val > distance_matrix[start][i]):
            min_val = distance_matrix[start][i]
    lb = lb + min_val
    min_val = sys.maxint
    for i in range(len(visited)):
        if (not visited[i]) and ( min_val > distance_matrix[end][i]):
            min_val = distance_matrix[end][i]
    lb = lb + min_val
    for i in range(len(visited)):
        if not visited[i]:
            min1 = sys.maxint
            min2 = sys.maxint
            for j in range(len(visited)):
                if min1 > distance_matrix[i][j]:
                    min1 = distance_matrix[i][j]
            for j in range(len(visited)):
                if min2 > distance_matrix[j][i]:
                    min2 = distance_matrix[j][i]
            lb = lb + min1 + min2
    return (lb + 1) / 2

# compute the upper limit
def get_max(set, distance_matrix, last):
    min_val = last
    for i in range(len(distance_matrix)):
        if (i not in set) and (distance_matrix[last][i] < distance_matrix[last][min_val]):
            min_val = i
    if min_val == last: 
        return distance_matrix[last][len(distance_matrix)-1]
    else:
        set.add(min_val)
        return distance_matrix[last][min_val] + get_max(set, distance_matrix, min_val)

# compute the lower limit
def get_min(distance_matrix):
    count = 0
    for i in range(len(distance_matrix)):
        count = count + get_min_two(distance_matrix[i])
    return count/2
        
def get_min_two(lst):
    min_val = sys.maxint
    sec_min = sys.maxint
    for i in lst:
        if i < sec_min:
            sec_min = i
        if i < min_val:
            sec_min = min_val
            min_val = i
    return (min_val + sec_min)



with open('Kiosk Coords.csv') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        index.append(row['name'])
        coord.append((row['latitude (N)'], row['longitude (N)']))

index.append('Kitchen on Lake and Racine Ave')
coord.append((41.8851024,-87.6618988))

# distance_matrix = [[0 for col in range(len(index))] for row in range(len(index))]

# this line is hardcoded by me
# the data is acqiured with Google API
distance_matrix = [[9223372036854775807, 4273, 149836, 7065, 7535, 13309, 13128, 5049, 5206, 43443, 5649, 11346, 5756, 31554, 4488, 149950, 31657, 5182, 6674, 151882, 27112, 4488, 5130, 156025, 4502, 15621, 5472, 807, 43443, 8053, 10910, 2115, 5099, 2468, 13309, 45703, 15356, 3235, 47704, 30868, 37273, 6750, 149950, 8410, 12810, 4932, 4488, 4488, 31855, 72971, 2159], [4273, 9223372036854775807, 144979, 648, 2305, 18131, 8270, 3194, 2731, 38585, 3535, 15763, 1773, 26696, 215, 145093, 26799, 2771, 2774, 147024, 22255, 215, 2704, 151168, 3892, 20038, 2175, 4794, 38585, 2005, 3869, 3293, 3686, 4061, 18131, 41877, 19772, 2621, 42846, 26010, 41690, 1264, 145093, 1499, 4249, 3097, 215, 215, 26997, 65242, 2260], [149836, 144979, 9223372036854775807, 146693, 147677, 170768, 138923, 147325, 147558, 112834, 148144, 153154, 146990, 127886, 145340, 114, 127989, 146943, 148864, 1545, 129173, 145340, 146884, 5806, 148023, 152385, 146995, 150406, 112834, 147952, 142630, 147622, 148304, 148192, 170768, 142121, 147127, 146752, 105201, 123384, 148401, 146378, 114, 144856, 144199, 147284, 145340, 145340, 128187, 114488, 145509], [7065, 648, 146693, 9223372036854775807, 1799, 17958, 9484, 2335, 2083, 39799, 3943, 15590, 1125, 27909, 515, 146306, 28012, 1802, 1995, 148237, 23468, 515, 1954, 152381, 2558, 19865, 1527, 6101, 39799, 2081, 4517, 3358, 2906, 3888, 17958, 43090, 19599, 2106, 44059, 27223, 41517, 616, 146306, 2147, 4668, 2128, 515, 515, 28210, 66456, 2600], [7535, 2305, 147677, 1799, 9223372036854775807, 21111, 10540, 3279, 3345, 40855, 2555, 17777, 1985, 28965, 2304, 147362, 29068, 2745, 1196, 149293, 24524, 2304, 3359, 153437, 4328, 22052, 2470, 8289, 40855, 532, 6477, 5116, 2699, 5492, 21111, 44146, 21787, 4052, 45115, 28279, 43704, 1911, 147362, 5319, 4944, 3071, 2304, 2304, 29266, 67512, 4588], [13309, 18131, 170768, 17958, 21111, 9223372036854775807, 26250, 18736, 18515, 63513, 20139, 15190, 18779, 52248, 20614, 171154, 52350, 18202, 20779, 173085, 48668, 20614, 17841, 177229, 18189, 11186, 18513, 14109, 63513, 21862, 24031, 17190, 20283, 16647, 0, 58242, 19970, 17719, 67774, 43989, 49812, 19872, 171154, 21532, 25673, 18528, 20614, 20614, 52548, 85510, 18975], [13128, 8270, 138923, 9484, 10540, 26250, 9223372036854775807, 11011, 11244, 32179, 11830, 23580, 10676, 20290, 9026, 138687, 20393, 10629, 12550, 140618, 15848, 9026, 10570, 144761, 11709, 27855, 10681, 14092, 32179, 11638, 4509, 11308, 11990, 11878, 25948, 35471, 27589, 10438, 36440, 19604, 40911, 10064, 138687, 8542, 6053, 10970, 9026, 9026, 20591, 58836, 9195], [5049, 3194, 147325, 2335, 3279, 18736, 11011, 9223372036854775807, 784, 40095, 1398, 15046, 1333, 28206, 2639, 146602, 28308, 756, 2090, 148533, 23764, 2639, 652, 152677, 1260, 19321, 808, 5558, 40095, 3469, 7561, 2264, 1540, 2775, 16846, 43386, 19056, 1012, 44355, 27520, 40973, 1508, 146602, 5062, 8226, 510, 2639, 2639, 28506, 66752, 2438], [5206, 2731, 147558, 2083, 3345, 18515, 11244, 784, 9223372036854775807, 40688, 1286, 15357, 1222, 28799, 2528, 147196, 28902, 648, 2702, 149127, 24358, 2528, 687, 153271, 1147, 19632, 938, 5869, 40688, 4080, 8155, 2301, 1427, 2811, 17456, 43980, 19367, 1049, 44949, 28113, 41284, 1396, 147196, 5655, 8837, 398, 2528, 2528, 29100, 67345, 3099], [43443, 38585, 112834, 39799, 40855, 63513, 32179, 40095, 40688, 9223372036854775807, 41520, 45294, 40366, 20026, 38716, 113052, 20129, 40319, 42241, 114983, 21313, 38716, 40261, 119127, 41399, 44525, 40371, 43782, 0, 41328, 36006, 40998, 41680, 41568, 62909, 22555, 39268, 40128, 9672, 15273, 40541, 39754, 113052, 38232, 37575, 40661, 38716, 38716, 20327, 32227, 38886], [5649, 3535, 148144, 3943, 2555, 20139, 11830, 1398, 1286, 41520, 9223372036854775807, 15173, 1732, 29309, 3038, 147706, 29412, 1159, 1794, 149637, 24868, 3038, 1197, 153781, 1129, 19448, 1448, 5685, 41199, 3448, 8665, 2809, 918, 3319, 17967, 44490, 19182, 1560, 45459, 28624, 41100, 1907, 147706, 6166, 7260, 909, 3038, 3038, 29610, 67856, 3609], [11346, 15763, 153154, 15590, 17777, 15190, 23580, 15046, 15357, 45294, 15173, 9223372036854775807, 15836, 33848, 17573, 152754, 33951, 15263, 16755, 154686, 30268, 17573, 15210, 158829, 14583, 7120, 15552, 11650, 45114, 18134, 20990, 12723, 15180, 14419, 14125, 39296, 8949, 13618, 49374, 40948, 30866, 16831, 152754, 18491, 22891, 15013, 17573, 17573, 34149, 66564, 12390], [5756, 1773, 146990, 1125, 1985, 18779, 10676, 1333, 1222, 40366, 1732, 15836, 9223372036854775807, 28054, 1472, 146451, 28157, 1035, 1626, 148382, 23613, 1472, 1650, 152526, 1669, 19795, 761, 6032, 39944, 2341, 7410, 3248, 1943, 3818, 17888, 43235, 19529, 2378, 44204, 27368, 41447, 341, 146451, 3229, 4986, 1361, 1472, 1472, 28355, 66600, 2612], [31554, 26696, 127886, 27909, 28965, 52248, 20290, 28206, 28799, 20026, 29309, 33848, 28054, 9223372036854775807, 27051, 128755, 108, 28654, 30576, 130686, 6474, 27051, 28596, 134830, 29734, 31894, 28706, 32117, 21114, 29663, 24341, 29333, 30016, 29904, 50278, 24418, 26637, 28463, 25375, 22841, 27911, 28089, 128755, 26568, 25911, 28996, 27051, 27051, 312, 47783, 27221], [4488, 215, 145340, 515, 2304, 20614, 9026, 2639, 2528, 38716, 3038, 17573, 1472, 27051, 9223372036854775807, 145307, 27013, 2317, 2641, 147238, 22469, 0, 2469, 151382, 3074, 20252, 2042, 5009, 38800, 1872, 3763, 3507, 3553, 4275, 18346, 42091, 19987, 2835, 43060, 26225, 41904, 1132, 145307, 1714, 4024, 2643, 0, 0, 27211, 65457, 2475], [149950, 145093, 114, 146306, 147362, 171154, 138687, 146602, 147196, 113052, 147706, 152754, 146451, 128755, 145307, 9223372036854775807, 128103, 147057, 148979, 1431, 129287, 145454, 146999, 5692, 148137, 152499, 147109, 150520, 112948, 148066, 142744, 147736, 148418, 148306, 170883, 142235, 147242, 146866, 105315, 123498, 148515, 146492, 0, 144970, 144313, 147398, 145454, 145454, 128301, 114602, 145623], [31657, 26799, 127989, 28012, 29068, 52350, 20393, 28308, 28902, 20129, 29412, 33951, 28157, 108, 27013, 128103, 9223372036854775807, 28547, 30468, 130578, 6366, 26944, 28488, 134722, 29627, 31787, 28599, 32010, 21007, 29556, 24234, 29226, 29908, 29796, 50171, 24310, 26530, 28356, 25267, 22734, 27803, 27982, 128647, 26460, 25803, 28888, 26944, 26944, 204, 47675, 27113], [5182, 2771, 146943, 1802, 2745, 18202, 10629, 756, 648, 40319, 1159, 15263, 1035, 28654, 2317, 147057, 28547, 9223372036854775807, 2629, 149055, 24285, 2456, 615, 153198, 1076, 19560, 866, 5797, 40616, 4008, 8083, 2235, 1356, 2745, 17385, 43908, 19295, 977, 44877, 28041, 41212, 1325, 147123, 5583, 8765, 326, 2456, 2456, 29028, 67273, 3027], [6674, 2774, 148864, 1995, 1196, 20779, 12550, 2090, 2702, 42241, 1794, 16755, 1626, 30576, 2641, 148979, 30468, 2629, 9223372036854775807, 150407, 25638, 3265, 3104, 154551, 4073, 21797, 2215, 8034, 41969, 1492, 7782, 4860, 2205, 5237, 20207, 45260, 21531, 3797, 46229, 29394, 43449, 1886, 148476, 6624, 6249, 2815, 3265, 3265, 30381, 68626, 4333], [151882, 147024, 1545, 148237, 149293, 173085, 140618, 148533, 149127, 114983, 149637, 154686, 148382, 130686, 147238, 1431, 130578, 149055, 150407, 9223372036854775807, 131358, 147525, 149070, 4453, 150208, 154570, 149180, 152592, 115020, 150137, 144815, 149807, 150490, 150378, 172954, 144306, 149313, 148938, 107387, 125570, 150587, 148563, 1425, 147042, 146385, 149470, 147525, 147525, 130373, 116674, 147695], [27112, 22255, 129173, 23468, 24524, 48668, 15848, 23764, 24358, 21313, 24868, 30268, 23613, 6474, 22469, 129287, 6366, 24285, 25638, 131358, 9223372036854775807, 22681, 24226, 134177, 25364, 30127, 24336, 27747, 20461, 25293, 19971, 24963, 25645, 25533, 48511, 19795, 24870, 24093, 24722, 17224, 26144, 23719, 128102, 22197, 21540, 24625, 22681, 22681, 5824, 43160, 22850], [4488, 215, 145340, 515, 2304, 20614, 9026, 2639, 2528, 38716, 3038, 17573, 1472, 27051, 0, 145454, 26944, 2456, 3265, 147525, 22681, 9223372036854775807, 2469, 151382, 3074, 20252, 2042, 5009, 38800, 1872, 3763, 3507, 3553, 4275, 18346, 42091, 19987, 2835, 43060, 26225, 41904, 1132, 145307, 1714, 4024, 2643, 0, 0, 27211, 65457, 2475], [5130, 2704, 146884, 1954, 3359, 17841, 10570, 652, 687, 40261, 1197, 15210, 1650, 28596, 2469, 146999, 28488, 615, 3104, 149070, 24226, 2469, 9223372036854775807, 152584, 1633, 19298, 1231, 5535, 40002, 3884, 7468, 1614, 1915, 2124, 16764, 43293, 19032, 363, 44262, 27426, 40950, 3308, 146509, 4969, 8641, 925, 4051, 4051, 28413, 66658, 2412], [156025, 151168, 5806, 152381, 153437, 177229, 144761, 152677, 153271, 119127, 153781, 158829, 152526, 134830, 151382, 5692, 134722, 153198, 154551, 4453, 134177, 151382, 152584, 9223372036854775807, 153890, 158252, 152862, 156273, 118702, 153819, 148497, 153489, 154172, 154060, 176636, 147988, 152995, 152620, 111069, 129252, 154269, 152245, 7852, 150724, 150067, 153152, 151207, 151207, 134055, 120356, 151377], [4502, 3892, 148023, 2558, 4328, 18189, 11709, 1260, 1147, 41399, 1129, 14583, 1669, 29734, 3074, 148137, 29627, 1076, 4073, 150208, 25364, 3074, 1633, 153890, 9223372036854775807, 19083, 876, 5319, 40629, 4021, 8095, 2241, 1043, 2751, 17397, 43920, 18817, 990, 44889, 28053, 40735, 1506, 147136, 5596, 8778, 338, 2638, 2638, 29040, 67286, 3039], [15621, 20038, 152385, 19865, 22052, 11186, 27855, 19321, 19632, 44525, 19448, 7120, 19795, 31894, 20252, 152499, 31787, 19560, 21797, 154570, 30127, 20252, 19298, 158252, 19083, 9223372036854775807, 19865, 15963, 44411, 22446, 25302, 17035, 19492, 18731, 10255, 38593, 5825, 17931, 48671, 45261, 30164, 21143, 152052, 22803, 27203, 19325, 21886, 21886, 33446, 65861, 16702], [5472, 2175, 146995, 1527, 2470, 18513, 10681, 808, 938, 40371, 1448, 15552, 761, 28706, 2042, 147109, 28599, 866, 2215, 149180, 24336, 2042, 1231, 152862, 876, 19865, 9223372036854775807, 5563, 40332, 2822, 7799, 2510, 1626, 3012, 17083, 43623, 19060, 1249, 44593, 27757, 40978, 1027, 146839, 5299, 7814, 601, 2158, 2158, 28744, 66989, 2689], [807, 4794, 150406, 6101, 8289, 14109, 14092, 5558, 5869, 43782, 5685, 11650, 6032, 32117, 5009, 150520, 32010, 5797, 8034, 152592, 27747, 5009, 5535, 156273, 5319, 15963, 5563, 9223372036854775807, 43606, 8216, 11073, 2154, 5262, 2507, 13473, 45866, 15519, 3274, 47867, 31031, 37436, 6913, 150114, 8573, 12973, 5095, 4651, 4651, 32018, 73134, 2322], [43443, 38585, 112834, 39799, 40855, 63513, 32179, 40095, 40688, 0, 41199, 45114, 39944, 21114, 38800, 112948, 21007, 40616, 41969, 115020, 20461, 38800, 40002, 118702, 40629, 44411, 40332, 43606, 9223372036854775807, 41328, 36006, 40998, 41680, 41568, 62909, 22555, 39268, 40128, 9672, 15273, 40541, 39754, 113052, 38232, 37575, 40661, 38716, 38716, 20327, 32227, 38886], [8053, 2005, 147952, 2081, 532, 21862, 11638, 3469, 4080, 41328, 3448, 18134, 2341, 29663, 1872, 148066, 29556, 4008, 1492, 150137, 25293, 1872, 3884, 153819, 4021, 22446, 2822, 8216, 41328, 9223372036854775807, 6379, 5372, 3894, 5748, 21013, 44402, 22043, 4308, 45371, 28536, 43960, 2167, 147618, 5222, 4846, 3327, 2206, 2206, 29523, 67768, 4845], [10910, 3869, 142630, 4517, 6477, 24031, 4509, 7561, 8155, 36006, 8665, 20990, 7410, 24341, 3763, 142744, 24234, 8083, 7782, 144815, 19971, 3763, 7468, 148497, 8095, 25302, 7799, 11073, 36006, 6379, 9223372036854775807, 8991, 9111, 9561, 23631, 39996, 25272, 8121, 40965, 24129, 45437, 7747, 143212, 2062, 1971, 8653, 3459, 3459, 25116, 63362, 6878], [2115, 3293, 147622, 3358, 5116, 17190, 11308, 2264, 2301, 40998, 2809, 12723, 3248, 29333, 3507, 147736, 29226, 2235, 4860, 149807, 24963, 3507, 1614, 153489, 2241, 17035, 2510, 2154, 40998, 5372, 8991, 9223372036854775807, 2861, 1699, 16058, 47268, 16922, 1310, 45228, 28392, 38839, 4274, 147475, 5935, 10273, 2387, 5017, 5017, 29379, 74536, 1998], [5099, 3686, 148304, 2906, 2699, 20283, 11990, 1540, 1427, 41680, 918, 15180, 1943, 30016, 3553, 148418, 29908, 1356, 2205, 150490, 25645, 3553, 1915, 154172, 1043, 19492, 1626, 5262, 41680, 3894, 9111, 2861, 9223372036854775807, 3181, 18493, 49396, 19049, 1986, 45886, 29050, 40967, 2330, 148132, 6592, 7722, 1335, 3461, 3461, 30037, 76664, 4723], [2468, 4061, 148192, 3888, 5492, 16647, 11878, 2775, 2811, 41568, 3319, 14419, 3818, 29904, 4275, 148306, 29796, 2745, 5237, 150378, 25533, 4275, 2124, 154060, 2751, 18731, 3012, 2507, 41568, 5748, 9561, 1699, 3181, 9223372036854775807, 15631, 47641, 17294, 1940, 45926, 29091, 39212, 4973, 148173, 6633, 10903, 3629, 5715, 5715, 30077, 68323, 2370], [13309, 18131, 170768, 17958, 21111, 0, 25948, 16846, 17456, 62909, 17967, 14125, 17888, 50278, 18346, 170883, 50171, 17385, 20207, 172954, 48511, 18346, 16764, 176636, 17397, 10255, 17083, 13473, 62909, 21013, 23631, 16058, 18493, 15631, 9223372036854775807, 58242, 19970, 17719, 67774, 43989, 49812, 19872, 171154, 21532, 25673, 18528, 20614, 20614, 52548, 85510, 18975], [45703, 41877, 142121, 43090, 44146, 58242, 35471, 43386, 43980, 22555, 44490, 39296, 43235, 24418, 42091, 142235, 24310, 43908, 45260, 144306, 19795, 42091, 43293, 147988, 43920, 38593, 43623, 45866, 22555, 44402, 39996, 47268, 49396, 47641, 58242, 9223372036854775807, 33110, 42592, 27615, 36215, 12696, 42217, 142129, 40696, 40039, 43124, 41179, 41179, 22729, 29984, 41349], [15356, 19772, 147127, 19599, 21787, 19970, 27589, 19056, 19367, 39268, 19182, 8949, 19529, 26637, 19987, 147242, 26530, 19295, 21531, 149313, 24870, 19987, 19032, 152995, 18817, 5825, 19060, 15519, 39268, 22043, 25272, 16922, 19049, 17294, 19970, 33110, 9223372036854775807, 17441, 43371, 44771, 24863, 20654, 146751, 22314, 26714, 18836, 21396, 21396, 28146, 60560, 16213], [3235, 2621, 146752, 2106, 4052, 17719, 10438, 1012, 1049, 40128, 1560, 13618, 2378, 28463, 2835, 146866, 28356, 977, 3797, 148938, 24093, 2835, 363, 152620, 990, 17931, 1249, 3274, 40128, 4308, 8121, 1310, 1986, 1940, 17719, 42592, 17441, 9223372036854775807, 44424, 27588, 41112, 3470, 146671, 5131, 8803, 1087, 4213, 4213, 28575, 66820, 2574], [47704, 42846, 105201, 44059, 45115, 67774, 36440, 44355, 44949, 9672, 45459, 49374, 44204, 25375, 43060, 105315, 25267, 44877, 46229, 107387, 24722, 43060, 44262, 111069, 44889, 48671, 44593, 47867, 9672, 45371, 40965, 45228, 45886, 45926, 67774, 27615, 43371, 44424, 9223372036854775807, 18588, 45056, 44269, 104652, 42747, 42090, 45175, 43231, 43231, 24842, 27430, 43400], [30868, 26010, 123384, 27223, 28279, 43989, 19604, 27520, 28113, 15273, 28624, 40948, 27368, 22841, 26225, 123498, 22734, 28041, 29394, 125570, 17224, 26225, 27426, 129252, 28053, 45261, 27757, 31031, 15273, 28536, 24129, 28392, 29050, 29091, 43989, 36215, 44771, 27588, 18588, 9223372036854775807, 43127, 27720, 122822, 26198, 25541, 28627, 26682, 26682, 22913, 48692, 26851], [37273, 41690, 148401, 41517, 43704, 49812, 40911, 40973, 41284, 40541, 41100, 30866, 41447, 27911, 41904, 148515, 27803, 41212, 43449, 150587, 26144, 41904, 40950, 154269, 40735, 30164, 40978, 37436, 40541, 43960, 45437, 38839, 40967, 39212, 49812, 12696, 24863, 41112, 45056, 43127, 9223372036854775807, 43097, 149146, 44757, 49157, 41279, 43840, 43840, 33501, 40750, 38656], [6750, 1264, 146378, 616, 1911, 19872, 10064, 1508, 1396, 39754, 1907, 16831, 341, 28089, 1132, 146492, 27982, 1325, 1886, 148563, 23719, 1132, 3308, 152245, 1506, 21143, 1027, 6913, 39754, 2167, 7747, 4274, 2330, 4973, 19872, 42217, 20654, 3470, 44269, 27720, 43097, 9223372036854775807, 146110, 2888, 4646, 1731, 1132, 1132, 28014, 66260, 2757], [149950, 145093, 114, 146306, 147362, 171154, 138687, 146602, 147196, 113052, 147706, 152754, 146451, 128755, 145307, 0, 128647, 147123, 148476, 1425, 128102, 145307, 146509, 7852, 147136, 152052, 146839, 150114, 113052, 147618, 143212, 147475, 148132, 148173, 171154, 142129, 146751, 146671, 104652, 122822, 149146, 146110, 9223372036854775807, 144970, 144313, 147398, 145454, 145454, 128301, 114602, 145623], [8410, 1499, 144856, 2147, 5319, 21532, 8542, 5062, 5655, 38232, 6166, 18491, 3229, 26568, 1714, 144970, 26460, 5583, 6624, 147042, 22197, 1714, 4969, 150724, 5596, 22803, 5299, 8573, 38232, 5222, 2062, 5935, 6592, 6633, 21532, 40696, 22314, 5131, 42747, 26198, 44757, 2888, 144970, 9223372036854775807, 3199, 5638, 1725, 1725, 26473, 64718, 3307], [12810, 4249, 144199, 4668, 4944, 25673, 6053, 8226, 8837, 37575, 7260, 22891, 4986, 25911, 4024, 144313, 25803, 8765, 6249, 146385, 21540, 4024, 8641, 150067, 8778, 27203, 7814, 12973, 37575, 4846, 1971, 10273, 7722, 10903, 25673, 40039, 26714, 8803, 42090, 25541, 49157, 4646, 144313, 3199, 9223372036854775807, 8071, 4024, 4024, 25847, 64092, 9589], [4932, 3097, 147284, 2128, 3071, 18528, 10970, 510, 398, 40661, 909, 15013, 1361, 28996, 2643, 147398, 28888, 326, 2815, 149470, 24625, 2643, 925, 153152, 338, 19325, 601, 5095, 40661, 3327, 8653, 2387, 1335, 3629, 18528, 43124, 18836, 1087, 45175, 28627, 41279, 1731, 147398, 5638, 8071, 9223372036854775807, 2690, 2690, 29275, 67520, 3274], [4488, 215, 145340, 515, 2304, 20614, 9026, 2639, 2528, 38716, 3038, 17573, 1472, 27051, 0, 145454, 26944, 2456, 3265, 147525, 22681, 0, 4051, 151207, 2638, 21886, 2158, 4651, 38716, 2206, 3459, 5017, 3461, 5715, 20614, 41179, 21396, 4213, 43231, 26682, 43840, 1132, 145454, 1725, 4024, 2690, 9223372036854775807, 0, 27211, 65457, 2475], [4488, 215, 145340, 515, 2304, 20614, 9026, 2639, 2528, 38716, 3038, 17573, 1472, 27051, 0, 145454, 26944, 2456, 3265, 147525, 22681, 0, 4051, 151207, 2638, 21886, 2158, 4651, 38716, 2206, 3459, 5017, 3461, 5715, 20614, 41179, 21396, 4213, 43231, 26682, 43840, 1132, 145454, 1725, 4024, 2690, 0, 9223372036854775807, 27211, 65457, 2475], [31855, 26997, 128187, 28210, 29266, 52548, 20591, 28506, 29100, 20327, 29610, 34149, 28355, 312, 27211, 128301, 204, 29028, 30381, 130373, 5824, 27211, 28413, 134055, 29040, 33446, 28744, 32018, 20327, 29523, 25116, 29379, 30037, 30077, 52548, 22729, 28146, 28575, 24842, 22913, 33501, 28014, 128301, 26473, 25847, 29275, 27211, 27211, 9223372036854775807, 47308, 26746], [72971, 65242, 114488, 66456, 67512, 85510, 58836, 66752, 67345, 32227, 67856, 66564, 66600, 47783, 65457, 114602, 47675, 67273, 68626, 116674, 43160, 65457, 66658, 120356, 67286, 65861, 66989, 73134, 32227, 67768, 63362, 74536, 76664, 68323, 85510, 29984, 60560, 66820, 27430, 48692, 40750, 66260, 114602, 64718, 64092, 67520, 65457, 65457, 47308, 9223372036854775807, 64309], [2159, 2260, 145509, 2600, 4588, 18975, 9195, 2438, 3099, 38886, 3609, 12390, 2612, 27221, 2475, 145623, 27113, 3027, 4333, 147695, 22850, 2475, 2412, 151377, 3039, 16702, 2689, 2322, 38886, 4845, 6878, 1998, 4723, 2370, 18975, 41349, 16213, 2574, 43400, 26851, 38656, 2757, 145623, 3307, 9589, 3274, 2475, 2475, 26746, 64309, 9223372036854775807]]

# The following part is the code to get distance matrix
'''
for i in range(len(index)):
    for j in range(i, len(index)):
        if j != i:
            directions_result = gmaps.distance_matrix(coord[i], coord[j])
            sleep(0.1)
            print str(i*100+j) +' ' + str(directions_result['rows'][0]['elements'][0]['distance']['value'])
            distance_matrix[i][j] = directions_result['rows'][0]['elements'][0]['distance']['value']
            distance_matrix[j][i] = distance_matrix[i][j] 
        else:
            distance_matrix[i][j] = sys.maxint
'''

# print distance_matrix
for i in range(len(index)-1):
    visited.append(False);

# acquire the upper limit and lower limit
_max_limit =  get_max(set([(len(distance_matrix)-1)]), distance_matrix, len(distance_matrix)-1)
_min_limit =  get_min(distance_matrix)

# for i in range(1):
#     visited[i] = True
#     dfs(distance_matrix, visited, [len(index)-1,i], distance_matrix[len(index)-1][i], len(index)-2)
#     visited[i] = False
_shortest_path = [1,2,3,4,5]

for i in _shortest_path:
    print index[i] + ' -> ',
print index[len(index)-1]





